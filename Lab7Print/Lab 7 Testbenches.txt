
module LFSR_testbench(); 
reg Clock;
reg Reset;
wire [9:1] Q;

 LFSR dut (.Clock(Clock), .Reset(Reset), .Q);
  
 parameter CLOCK_PERIOD=100; 
 initial Clock=1; 
 always begin 
 #(CLOCK_PERIOD/2); 
 Clock = ~Clock; 
 end 
 
 initial begin 
 @(posedge Clock); 
 Reset <= 1; @(posedge Clock); 
 Reset <= 0;@(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock); 
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock); 
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 $stop; 
 end 
endmodule

module victory_testbench(); 
reg Clock, Reset, A;
wire [6:0] out;

 victory dut (.Clock(Clock), .Reset(Reset), .vict(A), .out(out));
  
 parameter CLOCK_PERIOD=100; 
 initial Clock=1; 
 always begin 
 #(CLOCK_PERIOD/2); 
 Clock = ~Clock; 
 end 
 
 initial begin 
 @(posedge Clock); 
 Reset <= 1; @(posedge Clock); 
 Reset <= 0; A <= 0;@(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 A <= 1;@(posedge Clock);
 @(posedge Clock); 
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 A <= 0;@(posedge Clock);
 @(posedge Clock); 
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 A <= 1;@(posedge Clock);
 @(posedge Clock); 
 @(posedge Clock);
 @(posedge Clock);
 @(posedge Clock);
 $stop; // End the simulation. 
 end 
endmodule



module addMod_testbench(); 
 reg clk, reset;
 reg [9:0] A, B;

 wire [9:0] E;
 
 addMod dutadd(.A, .B, .E, .clk, .Reset(reset); 
 
 parameter CLOCK_PERIOD=100; 
 initial clk=1; 
 always begin 
 #(CLOCK_PERIOD/2); 
 clk = ~clk; 
 end 
 
  initial begin 
 @(posedge clk); 
 reset <= 1; @(posedge clk); 
 reset <= 0; A <= 0;B <= 0; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 
 A <= 1;B <= 0; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk);
 @(posedge clk); 
 @(posedge clk); 
 
 A <= 0;B <= 1; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk);
@(posedge clk); 
@(posedge clk);  
  
 A <= 1;B <= 1; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 
 A <= 1;B <= 2; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk);
@(posedge clk); 
@(posedge clk);  
 
 A <= 0;B <= 3; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 

 A <= 1;B <= 4; @(posedge clk); 
 @(posedge clk); 
 
 A <= 1;B <= 5; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 
 A <= 0;B <= 6; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 1;B <= 7; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
A <= 1;B <= 8; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 
 A <= 0;B <= 9; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
@(posedge clk); 
@(posedge clk); 

 A <= 1;B <= 1; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
@(posedge clk); 

 A <= 3;B <= 0; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 4;B <= 1; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 2;B <= 1; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 5;B <= 1; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 7;B <= 2; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 8;B <= 0; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 9;B <= 0; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 3;B <= 3; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 4;B <= 6; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 6;B <= 2; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 3;B <= 9; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 A <= 4;B <= 8; @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 @(posedge clk); 
 $stop; // End the simulation. 
 end 
endmodule 

